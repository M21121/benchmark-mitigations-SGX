// enclave.edl
enclave {
    include "mitigation_config.h"

    trusted {
        public void ecall_warmup();
        public void ecall_set_mitigation_config([in] const MitigationConfig* config);
        public void ecall_empty();
        public void ecall_trigger_ocall();
        public void ecall_ping(int iteration);

        // Two file read methods
        public void ecall_file_read([in, string] const char* filename);
        public void ecall_sgx_file_read([in, string] const char* filename);

        public void ecall_crypto_workload();
        public void apply_speculation_mitigations();

        // Helper for creating sealed files
        public void ecall_create_sealed_file([in, string] const char* filename,
                                           [in, size=data_len] const char* data,
                                           size_t data_len);

        public void ecall_setup_ocall_benchmark();
        public void ecall_measure_pure_ocall(int iterations);
    };

    untrusted {
        void empty_ocall();
        void ocall_print_string([in, string] const char* str);
        void pong_ocall(int iteration);

        size_t ocall_read_file([in, string] const char* filename,
                               [out, size=buf_len] char* buf,
                               size_t buf_len);

        size_t ocall_read_sealed_file([in, string] const char* filename,
                                     [out, size=buf_len] uint8_t* sealed_buf,
                                     size_t buf_len);

        int ocall_write_sealed_file([in, string] const char* filename,
                                   [in, size=data_len] const uint8_t* sealed_data,
                                   size_t data_len);
    };
};
